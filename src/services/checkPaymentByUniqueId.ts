import axios from "axios";
import { config } from "../config";

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ `orderId`
 * @param orderId - ID –∑–∞–∫–∞–∑–∞
 * @returns –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ –∏–ª–∏ –æ—à–∏–±–∫–æ–π
 */
export const checkPaymentByUniqueId = async (uniqueId: string) => {
    try {
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂ –ø–æ orderId: ${uniqueId}`);

        const response = await axios.get(`${config.YOOKASSA_API_URL}`, {
            auth: { username: config.SHOP_ID, password: config.API_KEY },
            headers: { "Content-Type": "application/json" },
        });

        const payments = response.data.items;

        if (!payments || payments.length === 0) {
            return { error: "‚ùå –ü–ª–∞—Ç–µ–∂–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" };
        }

        // –ò—â–µ–º –ø–ª–∞—Ç–µ–∂ –ø–æ orderId
        const payment = payments.find(
            (p: any) => p.metadata?.uniqueId === uniqueId
        );

        if (!payment) {
            return { error: "‚ùå –ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω" };
        }

        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–ª–∞—Ç–µ–∂ ${uniqueId}, —Å—Ç–∞—Ç—É—Å: ${payment.status}`);

        return {
            uniqueId,
            paymentId: payment.id,
            status: payment.status,
            amount: payment.amount.value,
            currency: payment.amount.currency,
        };
    } catch (error: any) {
        console.error(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞—Ç–µ–∂–∞:",
            error.response?.data || error.message
        );
        return { error: error.response?.data || error.message };
    }
};
